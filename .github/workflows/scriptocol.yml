name: Scriptocol CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Detect Language
        id: detect-lang
        run: |
          if [ -f "package.json" ]; then
            echo "lang=js" >> $GITHUB_ENV
          elif [ -f "requirements.txt" ] || [ -f "pyproject.toml" ]; then
            echo "lang=python" >> $GITHUB_ENV
          elif [ -f "go.mod" ]; then
            echo "lang=go" >> $GITHUB_ENV
          else
            echo "Unsupported language" && exit 1
          fi

      - name: Set up Environment
        run: |
          case "$lang" in
            js)
              echo "Setting up Node.js..."
              curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && apt-get install -y nodejs
              npm install
              ;;
            python)
              echo "Setting up Python..."
              python -m venv venv && source venv/bin/activate
              pip install -r requirements.txt
              ;;
            go)
              echo "Setting up Go..."
              wget https://go.dev/dl/go1.21.1.linux-amd64.tar.gz
              tar -C /usr/local -xzf go1.21.1.linux-amd64.tar.gz
              export PATH=$PATH:/usr/local/go/bin
              go mod tidy
              ;;
          esac

      - name: Run Tests
        id: test-results
        continue-on-error: true
        run: |
          case "$lang" in
            js) npm test || echo "Tests failed, proceeding to AI fix mode" ;;
            python) pytest || echo "Tests failed, proceeding to AI fix mode" ;;
          esac

      - name: Trigger Scriptocol Fixes if Tests Fail
        if: failure()  # Only runs if the previous step fails
        run: |
          # Replace this URL with your permanent URL once ngrok is no longer used
          response=$(curl -X POST "https://your-permanent-url/analyze" \
          -H "Content-Type: application/json" \
          -d '{ "repo": "${{ github.repository }}", "pr": "${{ github.event.pull_request.number }}", "lang": "${{ env.lang }}" }' \
          -w "%{http_code}" -o scriptocol-summary.txt)
          echo "API Response Code: $response"
          cat scriptocol-summary.txt

      - name: Post Fix Summary as PR Comment
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = 'scriptocol-summary.txt';
            const prNumber = context.payload.pull_request.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;

            if (fs.existsSync(path)) {
              const summary = fs.readFileSync(path, 'utf8');
              github.rest.issues.createComment({
                issue_number: prNumber,
                owner: owner,
                repo: repo,
                body: `ðŸ”§ **Scriptocol Auto Fixes** ðŸ”§\n\`\`\`\n${summary}\n\`\`\``
              });
            } else {
              console.log("No fixes generated.");
            }
